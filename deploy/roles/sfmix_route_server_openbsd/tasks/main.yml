---
- name: Place httpd.conf
  become: true
  ansible.builtin.template:
    src: httpd.conf.j2
    dest: /etc/httpd.conf
    mode: ug=rw,o=r
  notify: Restart httpd

- name: Enable/start daemons
  become: true
  ansible.builtin.service:
    name: "{{ item }}"
    enabled: true
    state: started
  with_items:
     - ntpd
     - httpd
     - slowcgi
     - bgplgd

- name: Set bgplgd options
  become: true
  ansible.builtin.lineinfile:
    path: /etc/rc.conf.local
    regexp: '^bgplgd_flags='
    line: 'bgplgd_flags="-S /var/www/run/bgpd.rsock"'
  notify: Restart bgplgd

- name: Place generated bgpd.conf into /etc/bgpd.candidate.conf
  become: true
  ansible.builtin.copy:
    src: "{{ lookup('env', 'HOME') }}/arouteserver/{{ inventory_hostname }}-openbgpd.cfg"
    dest: /etc/bgpd.candidate.conf
    owner: root
    group: wheel
    mode: ug=rw,o=r

- name: Test the candidate bgpd.conf
  become: true
  ansible.builtin.command:
    cmd: bgpd -n -f /etc/bgpd.candidate.conf
  register: bgpd_config_test
  changed_when: false

- name: "Ensure directory: /etc/bgpd_backups"
  become: true
  ansible.builtin.file:
    path: /etc/bgpd_backups
    state: directory
    owner: root
    group: wheel
    mode: ug=rwx,o=rx

- name: "Install OpenBGPD Config: Take a backup, place new config, and reload"
  when: bgpd_config_test.rc == 0
  block:
    - name: Backup existing bgpd.conf
      become: true
      ansible.builtin.copy:
        src: /etc/bgpd.conf
        dest: "/etc/bgpd_backups/{{ '%Y%m%d-%H%M%S' | strftime }}-bgpd.conf"
        remote_src: true
        owner: root
        group: wheel
        mode: ug=rw,o=r
    - name: Install new bgpd.conf
      become: true
      ansible.builtin.copy:
        src: /etc/bgpd.candidate.conf
        dest: /etc/bgpd.conf
        remote_src: true
        owner: root
        group: wheel
        mode: ug=rw,o=r
      notify: Reload bgpd

- name: Find old BGPD config backups more than 52 weeks old
  become: true
  ansible.builtin.find:
    paths: /etc/bgpd_backups
    age: 52w
  register: old_bgpd_configs

- name: Delete old BGPD config backups
  become: true
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: absent
  loop: "{{ old_bgpd_configs.files }}"

- name: Ensure bgpd is enabled/started
  become: true
  ansible.builtin.service:
    name: bgpd
    enabled: true
    state: started
