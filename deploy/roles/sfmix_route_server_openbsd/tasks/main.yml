---
- name: Place httpd.conf
  become: true
  ansible.builtin.template:
    src: httpd.conf.j2
    dest: /etc/httpd.conf
    mode: u=rw,go=r
  notify: Restart httpd

# The ARIN TAL is not distributed with rpki-client and OpenBSD, unlike the other
# RIRs
- name: Place the ARIN RPKI TAL
  become: true
  ansible.builtin.copy:
    src: arin.tal
    dest: /etc/rpki/arin.tal
    owner: root
    group: wheel
    mode: ug=rw,o=r

- name: Set a crontab entry for rpki-client
  become: true
  ansible.builtin.cron:
    name: Run rpki-client hourly
    minute: "~"
    hour: "*"
    day: "*"
    month: "*"
    weekday: "*"
    job: "-ns rpki-client && bgpctl reload"

- name: Enable/start daemons
  become: true
  ansible.builtin.service:
    name: "{{ item }}"
    enabled: true
    state: started
  with_items:
    - ntpd
    - httpd
    - slowcgi
    - bgplgd

- name: "Ensure bgpd config directories: {{ item }}"
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: wheel
    mode: ug=rwx,o=rx
  with_items:
    - "{{ sfmix_route_server_openbsd_bgpd_config_dir }}"
    - "{{ sfmix_route_server_openbsd_bgpd_config_dir }}/backups"

- name: "Place rpki_rtr_config.local"
  become: true
  ansible.builtin.template:
    src: rpki_rtr_config.local.j2
    dest: "{{ sfmix_route_server_openbsd_bgpd_config_dir }}/rpki_rtr_config.local"
    owner: root
    group: wheel
    mode: ug=rw,o=r
  notify: Reload bgpd

- name: "Place generated bgpd.conf into bgpd.candidate.conf"
  become: true
  ansible.builtin.copy:
    src: "{{ lookup('env', 'HOME') }}/arouteserver/{{ inventory_hostname }}-openbgpd.cfg"
    dest: "{{ sfmix_route_server_openbsd_bgpd_config_dir }}/bgpd.candidate.conf"
    owner: root
    group: wheel
    mode: ug=rw,o=r

- name: Test the candidate bgpd.conf
  become: true
  ansible.builtin.command:
    cmd: "bgpd -n -f {{ sfmix_route_server_openbsd_bgpd_config_dir }}/bgpd.candidate.conf"
  register: bgpd_config_test
  changed_when: false

- name: "Install OpenBGPD Config: Take a backup, place new config, and reload"
  when: bgpd_config_test.rc == 0
  block:
    - name: Check for an existing bgpd config
      become: true
      ansible.builtin.stat:
        path: "{{ sfmix_route_server_openbsd_bgpd_config_dir }}/bgpd.conf"
      register: existing_bgpd_config
    - name: Backup existing bgpd.conf
      become: true
      when: existing_bgpd_config.stat.exists
      ansible.builtin.copy:
        remote_src: true
        src: "{{ sfmix_route_server_openbsd_bgpd_config_dir }}/bgpd.conf"
        dest: "{{ sfmix_route_server_openbsd_bgpd_config_dir }}/backups/{{ '%Y%m%d-%H%M%S' | strftime }}-bgpd.conf"
        owner: root
        group: wheel
        mode: ug=rw,o=r
    - name: Install new bgpd.conf
      become: true
      ansible.builtin.copy:
        src: "{{ sfmix_route_server_openbsd_bgpd_config_dir }}/bgpd.candidate.conf"
        dest: "{{ sfmix_route_server_openbsd_bgpd_config_dir }}/bgpd.conf"
        remote_src: true
        owner: root
        group: wheel
        mode: u=rw,go=
      notify: Reload bgpd

- name: Find old BGPD config backups more than 52 weeks old
  become: true
  ansible.builtin.find:
    paths: "{{ sfmix_route_server_openbsd_bgpd_config_dir }}/backups"
    age: 52w
  register: old_bgpd_configs

- name: Delete old BGPD config backups
  become: true
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: absent
  loop: "{{ old_bgpd_configs.files }}"

- name: Set bgpd options
  become: true
  ansible.builtin.lineinfile:
    path: /etc/rc.conf.local
    regexp: '^bgpd_flags='
    line: "bgpd_flags='-f {{ sfmix_route_server_openbsd_bgpd_config_dir }}/bgpd.conf'"
  notify: Restart bgpd

- name: Start bgpd
  become: true
  ansible.builtin.service:
    name: bgpd
    state: started
