---
- name: Ensure alice directory
  become: true
  ansible.builtin.file:
    path: /opt/alice
    state: directory
    owner: sfmix
    group: sfmix
    mode: ug=rwx,o=rx

- name: Clone alice-lg/alice-lg repo
  become: true
  become_user: sfmix
  ansible.builtin.git:
    repo: "{{ alice_git_repo_url }}"
    version: "{{ alice_git_repo_version }}"
    dest: /opt/alice/alice-lg
  notify: Re-build alice-lg

- name: Trigger alice rebuilt and old container destruction
  ansible.builtin.meta: flush_handlers

- name: "Checkout Alice Theme Repository"
  become: true
  ansible.builtin.git:
    repo: "{{ alice_theme_repo_url }}"
    version: "{{ alice_theme_repo_version }}"
    dest: "{{ alice_theme_directory }}"

- name: "Template {{ alice_config_file }}"
  become: true
  notify: Restart alice
  ansible.builtin.template:
    src: alice.conf.j2
    dest: "{{ alice_config_file }}"
    owner: root
    group: root
    mode: ug=rw,o=r

- name: "Run alice-lg docker container"
  become: true
  community.docker.docker_container:
    name: alice
    image: "alice-lg:{{ alice_git_repo_version | replace('/', '_') }}"
    restart_policy: unless-stopped
    network_mode: host
    volumes:
      - "{{ alice_config_file }}:{{ alice_config_file }}"
      - "{{ alice_theme_directory }}:{{ alice_theme_directory }}"
    user: nobody
    command: "alice-lg -config {{ alice_config_file }}"

- name: "Create a dhparams file"
  become: true
  community.crypto.openssl_dhparam:
    path: /etc/ssl/certs/dhparam.pem
    size: 2048

- name: "Firewall: Allow HTTP(S)"
  become: true
  community.general.ufw:
    rule: allow
    port: "{{ item }}"
  loop:
    - http
    - https

- name: "Install HTTPS/Nginx Reverse Proxy"
  become: true
  block:
    - name: "Install certbox and nginx"
      ansible.builtin.include_role:
        name: "{{ item }}"
      loop:
        - geerlingguy.certbot
        - geerlingguy.nginx
      vars:
        certbot_admin_email: "{{ ixp_primary_tech_contact_email }}"
        certbot_create_if_missing: true
        certbot_create_standalone_stop_services: ["nginx.service"]
        certbot_certs:
          - domains:
              - "{{ alice_domain }}"
        nginx_remove_default_vhost: true
        nginx_vhosts:
          - listen: "80"
            server_name: "_"
            return: "301 https://$host$request_uri"
          - listen: "443 ssl http2"
            server_name: "{{ alice_domain }}"
            extra_parameters: |
              ssl_certificate /etc/letsencrypt/live/{{ alice_domain }}/fullchain.pem;
              ssl_certificate_key /etc/letsencrypt/live/{{ alice_domain }}/privkey.pem;
              ssl_dhparam /etc/ssl/certs/dhparam.pem;
              location / {
                proxy_pass http://127.0.0.1:7340;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
              }
